import Logo from '@/components/Logo'
import {
  Accordion,
  AccordionButton,
  AccordionIcon,
  AccordionItem,
  AccordionPanel,
  Box,
  BoxProps,
  Button,
  ButtonGroup,
  ButtonProps,
  Card,
  Center,
  Container,
  Flex,
  HStack,
  Heading,
  Image,
  Input,
  SimpleGrid,
  Stack,
  Tab,
  TabIndicator,
  TabList,
  TabPanel,
  TabPanels,
  Tabs,
  Text,
  useTab,
  useToast,
} from '@chakra-ui/react'
import { Form, Formik } from 'formik'
import { Rubik } from 'next/font/google'
import Head from 'next/head'
import { forwardRef } from 'react'
import * as Yup from 'yup'
const inter = Rubik({ subsets: ['latin'] })

export default function Home() {
  return (
    <Box>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container
        pt={6}
        maxW={{
          lg: 'container.lg',
          xl: 'container.xl',
        }}
        overflow={'hidden'}
      >
        <Header />
        <Hero />
        <Features />
        <Download />
        <FAQs />
      </Container>
      <Footer />
    </Box>
  )
}
const pageLinks = [
  {
    title: 'Features',
    href: '#features',
  },
  {
    title: 'Pricing',
    href: '#pricing',
  },
  {
    title: 'Contact',
    href: '#contact',
  },
]
interface HeaderProps extends BoxProps {}
const Header = ({ ...props }: HeaderProps) => {
  return (
    <Box {...props}>
      <Flex justifyContent={'space-between'} alignItems={'center'}>
        <Logo />
        <Image
          hideFrom={'lg'}
          src={'/assets/images/icon-hamburger.svg'}
          alt={'Hamburger menu'}
        />
        <ButtonGroup
          hideBelow={'lg'}
          gap={4}
          alignItems={'center'}
          fontWeight={'normal'}
        >
          {pageLinks.map((link, index) => (
            <Button
              key={index}
              variant={'unstyled'}
              fontWeight={'medium'}
              _hover={{
                color: 'primary.softred',
              }}
              textTransform={'uppercase'}
            >
              {link.title}
            </Button>
          ))}
          <Button
            variant={'outline'}
            bgColor={'primary.softred'}
            color={'white'}
            borderColor={'primary.softred'}
            borderWidth={2}
            px={6}
            fontWeight={'medium'}
            _hover={{
              bgColor: 'white',
              color: 'primary.softred',
            }}
          >
            LOGIN
          </Button>
        </ButtonGroup>
      </Flex>
    </Box>
  )
}

const Hero = () => (
  <Box py={20}>
    <SimpleGrid
      columns={{
        base: 1,
        lg: 2,
      }}
      gap={20}
    >
      <Stack id={'hero-left-side'} spacing={6}>
        <Heading as="h1" fontWeight={'semibold'}>
          A Simple Bookmark Manager
        </Heading>
        <Text color={'primary.grayishblue'}>
          A clean and simple interface to organize your favourite websites. Open
          a new browser tab and see your sites load instantly. Try it for free.
        </Text>
        <ButtonGroup gap={2}>
          <Button
            bgColor={'primary.softblue'}
            color={'white'}
            shadow={'lg'}
            border={'2px solid'}
            borderColor={'transparent'}
            _hover={{
              bgColor: 'transparent',
              borderColor: 'primary.softblue',
              color: 'primary.softblue',
            }}
          >
            Get it on Chrome
          </Button>
          <Button
            shadow={'lg'}
            border={'2px solid'}
            borderColor={'transparent'}
            _hover={{
              bgColor: 'transparent',
              borderColor: 'primary.softred',
              color: 'primary.softred',
            }}
          >
            Get it on Firefox
          </Button>
        </ButtonGroup>
      </Stack>
      <Image src={'/assets/images/illustration-hero.svg'} alt="Hero image" />
    </SimpleGrid>
  </Box>
)
const features: {
  title: string
  content: {
    heading: string
    description: string
    image: string
  }
}[] = [
  {
    title: 'Simple Bookmarking',
    content: {
      heading: 'Bookmark in one click',
      description:
        'Organize your bookmarks however you like. Our simple drag-and-drop interface gives you complete control over how you manage your favourite sites.',
      image: '/assets/images/illustration-features-tab-1.svg',
    },
  },
  {
    title: 'Speedy Searching',
    content: {
      heading: 'Intelligent search',
      description:
        'Our powerful search feature will help you find saved sites in no time at all. No need to trawl through all of your bookmarks.',
      image: '/assets/images/illustration-features-tab-2.svg',
    },
  },
  {
    title: 'Easy Sharing',
    content: {
      heading: 'Share your bookmarks',
      description:
        'Easily share your bookmarks and collections with others. Create a shareable link that you can send at the click of a button.',
      image: '/assets/images/illustration-features-tab-3.svg',
    },
  },
]

const Features = () => {
  return (
    <Stack spacing={10} py={10}>
      <Center>
        <Stack maxW={'xl'} textAlign={'center'} spacing={4}>
          <Heading fontSize={'2xl'} fontWeight={'semibold'}>
            Features
          </Heading>
          <Text color={'primary.grayishblue'}>
            Our aim is to make it quick and easy for you to access your
            favourite websites. Your bookmarks sync between your devices so you
            can access them on the go.
          </Text>
        </Stack>
      </Center>
      <Tabs colorScheme={'none'}>
        <TabList
          flexDirection={{ base: 'column', lg: 'row' }}
          width={{
            base: 'full',
            lg: 'fit-content',
          }}
          mx={'auto'}
        >
          {features.map((feature, index) => (
            <Tab
              key={index}
              px={4}
              _hover={{
                color: 'primary.softred',
              }}
              color={'primary.grayishblue'}
              width={'full'}
              whiteSpace={'nowrap'}
              borderBottom={'1px solid'}
              borderBottomColor={'gray.200'}
              _selected={{
                color: 'black',
                borderColor: 'primary.softred',
                borderBottomWidth: '2px',
              }}
            >
              {feature.title}
            </Tab>
          ))}
        </TabList>
        <TabPanels>
          {features.map((feature, index) => (
            <TabPanel key={index} py={20}>
              <SimpleGrid columns={{ base: 1, lg: 2 }} gap={20}>
                <Image src={feature.content.image} alt={feature.title} />
                <Stack spacing={4} textAlign={{ base: 'center', lg: 'left' }}>
                  <Heading as={'h2'} fontSize={'2xl'} fontWeight={'semibold'}>
                    {feature.content.heading}
                  </Heading>
                  <Text>{feature.content.description}</Text>
                  <Button
                    hideBelow={'lg'}
                    mt={2}
                    width={'fit-content'}
                    bgColor={'primary.softblue'}
                    color={'white'}
                    shadow={'lg'}
                  >
                    More Info
                  </Button>
                </Stack>
              </SimpleGrid>
            </TabPanel>
          ))}
        </TabPanels>
      </Tabs>
    </Stack>
  )
}
const downloadOptions: {
  browserName: string
  image: string
  minVersion: string
}[] = [
  {
    browserName: 'Chrome',
    image: '/assets/images/logo-chrome.svg',
    minVersion: '62',
  },
  {
    browserName: 'Firefox',
    image: '/assets/images/logo-firefox.svg',
    minVersion: '55',
  },
  {
    browserName: 'Opera',
    image: '/assets/images/logo-opera.svg',
    minVersion: '46',
  },
]
const Download = () => (
  <Stack spacing={10} py={10}>
    <Center>
      <Stack maxW={'xl'} textAlign={'center'} spacing={4}>
        <Heading fontSize={'2xl'} fontWeight={'semibold'}>
          Download the extension
        </Heading>
        <Text color={'primary.grayishblue'}>
          We’ve got more browsers in the pipeline. Please do let us know if
          you’ve got a favourite you’d like us to prioritize.
        </Text>
      </Stack>
    </Center>
    <SimpleGrid
      columns={{
        base: 1,
        lg: 3,
      }}
      gap={6}
      pb={'60px'}
    >
      {downloadOptions.map((option, index) => (
        <Card
          key={index}
          p={6}
          shadow={'xl'}
          transform={`translateY(${index * 30}px)`}
          borderRadius={'xl'}
          width={'100%'}
          maxW={'sm'}
          mx={'auto'}
        >
          <Center>
            <Stack spacing={10} pt={4} pb={8}>
              <Image
                src={option.image}
                alt={option.browserName}
                objectFit={'contain'}
              />
              <Stack>
                <Heading as={'h3'} fontSize={'xl'} fontWeight={'semibold'}>
                  Add to {option.browserName}
                </Heading>
                <Text color={'primary.grayishblue'}>
                  Minimum version {option.minVersion}
                </Text>
              </Stack>
            </Stack>
          </Center>
          <Stack mt={'auto'} spacing={6}>
            <Image src={'/assets/images/bg-dots.svg'} alt={'Dots'} />
            <Button
              bgColor={'primary.softblue'}
              color={'white'}
              _hover={{
                bgColor: 'primary.softred',
              }}
            >
              Add & Install Extension
            </Button>
          </Stack>
        </Card>
      ))}
    </SimpleGrid>
  </Stack>
)
const faqs: {
  question: string
  answer: string
}[] = [
  {
    question: 'What is Bookmark?',
    answer:
      'If you are looking for a simple and clean bookmark manager, Bookmark is the right choice. It allows you to save your favourite websites and access them on any device.',
  },
  {
    question: 'How can I request a new browser?',
    answer:
      'You can send us an email and let us know which browser you would like us to support.',
  },
  {
    question: 'Is there a mobile app?',
    answer: 'We are working on it! Stay tuned for updates.',
  },
  {
    question: 'What about other Chromium browsers?',
    answer: 'We are working on it! Stay tuned for updates.',
  },
  {
    question: 'What is the minimum version required?',
    answer: 'We require Chrome 62, Firefox 55, and Opera 46.',
  },
]
const FAQs = () => (
  <Stack spacing={20} py={10}>
    <Center>
      <Stack maxW={'xl'} textAlign={'center'} spacing={4}>
        <Heading fontSize={'2xl'} fontWeight={'semibold'}>
          Frequently Asked Questions
        </Heading>
        <Text color={'primary.grayishblue'}>
          Here are some of our FAQs. If you have any other questions you’d like
          answered please feel free to email us.
        </Text>
      </Stack>
    </Center>
    <Accordion
      maxWidth={'xl'}
      mx={'auto'}
      width={'100%'}
      allowToggle
      defaultIndex={[0]}
    >
      {faqs.map((faq, index) => (
        <AccordionItem key={index}>
          {({ isExpanded }) => (
            <>
              <AccordionButton
                _hover={{
                  color: 'primary.softred',
                  bgColor: 'transparent',
                }}
                py={4}
              >
                <Box as="span" flex="1" textAlign="left" fontWeight={'medium'}>
                  {faq.question}
                </Box>
                <AccordionIcon
                  color={isExpanded ? 'primary.softred' : 'primary.softblue'}
                  boxSize={7}
                />
              </AccordionButton>
              <AccordionPanel pb={4} color={'primary.grayishblue'}>
                {faq.answer}
              </AccordionPanel>
            </>
          )}
        </AccordionItem>
      ))}
    </Accordion>
    <Button
      width={'fit-content'}
      mx={'auto'}
      bgColor={'primary.softblue'}
      color={'white'}
      shadow={'lg'}
    >
      More Info
    </Button>
  </Stack>
)
const Footer = () => {
  const toast = useToast()
  const validationSchema = Yup.object().shape({
    email: Yup.string()
      .email('Whoops, make sure it’s an email')
      .required('Required'),
  })

  return (
    <Box>
      <Box bgColor={'primary.softblue'} color={'white'} py={20}>
        <Container>
          <Stack textAlign={'center'} spacing={4}>
            <Text textTransform={'uppercase'} letterSpacing={'wider'}>
              35,000+ already joined
            </Text>
            <Heading fontSize={'2xl'}>
              Stay up-to-date with what we’re doing
            </Heading>
            <Formik
              initialValues={{ email: '' }}
              validationSchema={validationSchema}
              onSubmit={(values, actions) => {
                toast({
                  status: 'success',
                  title: 'Success',
                  description:
                    'You have successfully subscribed to our newsletter',
                })
                actions.setSubmitting(false)
                actions.resetForm()
                return
              }}
            >
              {(props) => (
                <Form>
                  <Flex
                    flexDirection={{ base: 'column', lg: 'row' }}
                    alignItems={'flex-start'}
                    gap={2}
                  >
                    <Stack
                      width={'100%'}
                      borderRadius={'md'}
                      bgColor={
                        props.errors.email && props.touched.email
                          ? 'primary.softred'
                          : 'transparent'
                      }
                    >
                      <Input
                        bgColor={'white'}
                        placeholder="Enter your email address"
                        color={'primary.verydarkblue'}
                        name="email"
                        value={props.values.email}
                        onChange={props.handleChange}
                      />
                      <Text textAlign={'left'} fontSize={'sm'} px={2}>
                        {props.errors.email && props.touched.email
                          ? props.errors.email
                          : ''}
                      </Text>
                    </Stack>
                    <Button
                      width={{ base: 'full', lg: 'fit-content' }}
                      bgColor={'primary.softred'}
                      color={'white'}
                      border={'2px solid'}
                      borderColor={'transparent'}
                      _hover={{
                        bgColor: 'white',
                        color: 'primary.softred',
                        borderColor: 'primary.softred',
                      }}
                      isLoading={props.isSubmitting}
                      type="submit"
                    >
                      Contact Us
                    </Button>
                  </Flex>
                </Form>
              )}
            </Formik>
          </Stack>
        </Container>
      </Box>
      <Box bgColor={'primary.verydarkblue'} color={'white'} py={[10]}>
        <Container>
          <Flex
            flexDirection={{ base: 'column', lg: 'row' }}
            justifyContent={'space-between'}
            alignItems={'center'}
            gap={6}
          >
            <Flex
              flexDirection={{ base: 'column', lg: 'row' }}
              justifyContent={'start'}
              alignItems={'center'}
              gap={6}
            >
              <Logo logoVarient="white" />
              <ButtonGroup
                flexDirection={{ base: 'column', lg: 'row' }}
                gap={2}
              >
                {pageLinks.map((link, index) => (
                  <Button
                    key={index}
                    variant={'unstyled'}
                    color={'primary.grayishblue'}
                    fontWeight={'normal'}
                    textTransform={'uppercase'}
                    _hover={{
                      color: 'primary.softred',
                    }}
                  >
                    {link.title}
                  </Button>
                ))}
              </ButtonGroup>
            </Flex>
            <ButtonGroup gap={5}>
              <Image
                boxSize={5}
                objectFit={'contain'}
                src={'/assets/images/icon-facebook.svg'}
                alt={'Facebook'}
              />
              <Image
                boxSize={5}
                objectFit={'contain'}
                src={'/assets/images/icon-twitter.svg'}
                alt={'Twitter'}
              />
            </ButtonGroup>
          </Flex>
        </Container>
      </Box>
    </Box>
  )
}
